{"version":3,"sources":["js/03-promises.js"],"names":["createPromise","position","delay","Promise","resolve","reject","Math","random","formRef","document","querySelector","amountRef","stepRef","delayRef","onSubmit","event","preventDefault","value","step","amount","console","log","i","then","catch","dir","addEventListener"],"mappings":";AAAA,SAASA,EAAcC,EAAUC,GACxB,OAAA,IAAIC,QAAS,CAACC,EAASC,KACRC,KAAKC,SAAW,GAEpCH,EAAQH,EAAUC,GAElBG,EAAOJ,EAAUC,KAGrB,MAAMM,EAAUC,SAASC,cAAc,SACjCC,EAAYF,SAASC,cAAc,wBACnCE,EAAUH,SAASC,cAAc,sBACjCG,EAAWJ,SAASC,cAAc,uBAetC,SAASI,EAAUC,GACjBA,EAAMC,iBACFd,IAAAA,EAAQW,EAASI,MACfC,MAAAA,EAAON,EAAQK,MACfE,EAASR,EAAUM,MACzBG,QAAQC,IAAInB,GACZkB,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACT,IAAA,IAAIG,EAAI,EAAGA,GAAKH,EAAQG,GAAG,EAEhCtB,EAAcsB,EADdpB,GAAOgB,GAENK,KAAK,KACJH,QAAQC,2BAA2BC,QAAQpB,SAE5CsB,MAAM,KACLJ,QAAQC,0BAA0BC,QAAQpB,SA1B9CkB,QAAQK,IAAId,GACZH,EAAQkB,iBAAiB,SAAWZ","file":"03-promises.e3f53474.js","sourceRoot":"../src","sourcesContent":["function createPromise(position, delay) {\n  return new Promise ((resolve, reject)=>{\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve(position, delay);// Fulfill\n  } else {\n    reject(position, delay);// Reject\n  } })\n}\nconst formRef = document.querySelector('.form');\nconst amountRef = document.querySelector('input[name=\"amount\"]');\nconst stepRef = document.querySelector('input[name=\"step\"]');\nconst delayRef = document.querySelector('input[name=\"delay\"]');\n\n\n\nconsole.dir(amountRef)\nformRef.addEventListener('submit',  onSubmit)\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n  function onSubmit (event) {\n    event.preventDefault()\n    let delay = delayRef.value;\n    const step = stepRef.value;\n    const amount = amountRef.value;\n    console.log(delay)\n    console.log(step)\n    console.log(amount)\n  for (let i = 1; i <= amount; i+=1) {\n  delay=+step;\n  createPromise(i, delay)\n  .then(() => {\n    console.log(`✅ Fulfilled promise ${i} in ${delay}ms`);\n  })\n  .catch(() => {\n    console.log(`❌ Rejected promise ${i} in ${delay}ms`);\n  });\n}\n  }"]}